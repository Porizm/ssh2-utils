{"name":"Ssh2-utils","tagline":"nodejs ssh2 utils module to ease ssh and sftp usage with nodejs","body":"# SSH2Utils [![Build Status](https://travis-ci.org/maboiteaspam/ssh2-utils.svg?branch=master)](https://travis-ci.org/maboiteaspam/ssh2-utils)\r\n\r\nA library to ease use of excellent modules ssh2.\r\n\r\nProvide a set of methods to exec/run/getFile/putFile/getDir/putDir.\r\n\r\n---------------------------------------\r\n\r\n\r\n# Install\r\n\r\n```npm i ssh2-utils --save```\r\n\r\n---------------------------------------\r\n\r\n\r\n# Documentation\r\n\r\nAutomatic source code documentation generation \r\n\r\nis supported by jsdoc at https://maboiteaspam.github.io/ssh2-utils/docs/\r\n\r\nAutomatic tests documentation  generation \r\n\r\nis support by mocha https://github.com/maboiteaspam/ssh2-utils/tree/gh-pages/mocha-tests.md\r\n\r\n\r\n### API\r\n\r\n* [`SSH2Utils`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html)\r\n    * [`open`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#open)\r\n    * [`exec`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#exec)\r\n    * [`run`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#run)\r\n    * [`runMultiple`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#runMultiple)\r\n    * [`readFile`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#readFile)\r\n    * [`putDir`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#putDir)\r\n    * [`putDirSudo`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#putDirSudo)\r\n    * [`readDir`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#readDir)\r\n    * [`putFile`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#putFile)\r\n    * [`mkdir`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#mkdir)\r\n    * [`mkdirSudo`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#mkdirSudo)\r\n    * [`rmdir`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#rmdir)\r\n    * [`rmdirSudo`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#rmdirSudo)\r\n    * [`writeFile`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#writeFile)\r\n    * [`writeFileSudo`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#writeFileSudo)\r\n    * [`getDir`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#getDir)\r\n    * [`fileExists`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#fileExists)\r\n    * [`fileExistsSudo`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#fileExistsSudo)\r\n    * [`ensureFileContains`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#ensureFileContains)\r\n    * [`ensureEmptyDirSudo`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#ensureEmptyDirSudo)\r\n    * [`ensureEmptyDir`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#ensureEmptyDir)\r\n    * [`ensureOwnership`](http://maboiteaspam.github.io/ssh2-utils/docs/SSH2Utils.html#ensureOwnership)\r\n\r\n\r\n---------------------------------------\r\n\r\n### Examples\r\n\r\n<a name=\"exec\" />\r\n### SSH2Utils.exec(server, cmd, callback)\r\n\r\nExecute a command on remote server and return its output.\r\n\r\n__Arguments__\r\n\r\n* `server` - An object of ssh server credentials.\r\n* `cmd` - A command line to execute on remote.\r\n* `callback(err,stdout,stderr,server,conn)` - A callback called on command line completion. \r\n    * `err` isa Boolean.\r\n    * `stdout` `stderr` are String.\r\n    * `server` An ssh server credentials object.\r\n    * `conn` An ssh Client object.\r\n\r\n__Examples__\r\n\r\n```js\r\n    var SSH2Utils = require('ssh2-utils');\r\n    var ssh = new SSH2Utils();\r\n    \r\n    var server = {host: \"localhost\", username:\"user\", password:\"pwd\" };\r\n    \r\n    ssh.exec(server, 'ls', function(err,stdout,stderr){\r\n        if(err) console.log(err);\r\n        console.log(stdout);\r\n        console.log(stderr);\r\n    });\r\n```\r\n\r\n\r\n<a name=\"run\" />\r\n### SSH2Utils.run(server, cmd, callback)\r\n\r\nExecute a command on remote server and return its streams.\r\n\r\n__Arguments__\r\n\r\n* `server` - An object of ssh server credentials.\r\n* `cmd` - A command line to execute on remote.\r\n* `callback(err,stdout,stderr,server,conn)` - A callback called on command line sent. \r\n    * `err` isa Boolean.\r\n    * `stdout` `stderr` are Streams.\r\n    * `server` An ssh server credentials object.\r\n    * `conn` An ssh Client object.\r\n\r\n__Examples__\r\n\r\n```js\r\n    var SSH2Utils = require('ssh2-utils');\r\n    var ssh = new SSH2Utils();\r\n    \r\n    var server = {host: \"localhost\", username:\"user\", password:\"pwd\" };\r\n    \r\n    ssh.run(server, ['ls','time'], function(err,stdout,stderr,server,conn){\r\n        if(err) console.log(err);\r\n        stdout.on('data', function(){\r\n            console.log(''+data);\r\n        });\r\n        stderr.on('data', function(){\r\n            console.log(''+data);\r\n        });\r\n        stdout.on('close',function(){\r\n            conn.end();\r\n        });\r\n    });\r\n```\r\n\r\n\r\n<a name=\"runMultiple\" />\r\n### SSH2Utils.runMultiple(server, cmds, onCmdCplt, onDone)\r\n##### SSH2Utils.runMultiple(server, cmds, onDone)\r\n\r\nExecute a series of command on remote server and returns their output.\r\n\r\n__Arguments__\r\n\r\n* `server` - An object of ssh server credentials.\r\n* `cmds` - An array of commands line to execute on remote.\r\n* `onCmdCplt(command, response, server)` - A callback called on command line completion. \r\n    * `command` the completed command line.\r\n    * `response` the completed command line response.\r\n    * `server` An ssh server credentials object.\r\n* `onDone(sessionText, sshObj)` - A callback called on session completion. \r\n    * `err` an Error.\r\n    * `sessionText` a String.\r\n    * `sshObj` An ssh Client object.\r\n\r\n__Examples__\r\n\r\n```js\r\n    var SSH2Utils = require('ssh2-utils');\r\n    var ssh = new SSH2Utils();\r\n    \r\n    var server = {host: \"localhost\", username:\"user\", password:\"pwd\" };\r\n    \r\n    ssh.runMultiple(server, ['ls','time'], function(sessionText, sshObj){\r\n        console.log(sessionText);\r\n    });\r\n```\r\n\r\n\r\n<a name=\"readFile\" />\r\n### SSH2Utils.readFile(server, remoteFile, localPath, callback)\r\n\r\nDownload a file from remote to local.\r\n\r\n__Arguments__\r\n\r\n* `server` - An object of ssh server credentials.\r\n* `remoteFile` - A remote file path to read.\r\n* `localPath` - A local file path to write.\r\n* `callback(err)` - A callback called on command line completion. \r\n    * `err` is an Error.\r\n    * `server` An ssh server credentials object.\r\n    * `conn` An ssh Client object.\r\n\r\n__Examples__\r\n\r\n```js\r\n    var SSH2Utils = require('ssh2-utils');\r\n    var ssh = new SSH2Utils();\r\n    \r\n    var server = {host: \"localhost\", username:\"user\", password:\"pwd\" };\r\n        \r\n    ssh.readFile(server,'/tmp/from_some_remote','/tmp/to_some_local', function(err){\r\n        if(err) console.log(err);\r\n    });\r\n```\r\n\r\n\r\n<a name=\"readFile\" />\r\n### SSH2Utils.putFile(server, localFile, remoteFile, callback)\r\n\r\nPut a file from local to remote\r\n\r\n__Arguments__\r\n\r\n* `server` - An object of ssh server credentials.\r\n* `localFile` - A local file path to write.\r\n* `remoteFile` - A remote file path to read.\r\n* `callback(err)` - A callback called on command line completion. \r\n    * `err` is an Error.\r\n    * `server` An ssh server credentials object.\r\n    * `conn` An ssh Client object.\r\n\r\n__Examples__\r\n\r\n```js\r\n    var SSH2Utils = require('ssh2-utils');\r\n    var ssh = new SSH2Utils();\r\n    \r\n    var server = {host: \"localhost\", username:\"user\", password:\"pwd\" };\r\n        \r\n    ssh.putFile(server,'/tmp/to_some_local','/tmp/from_some_remote', function(err){\r\n        if(err) console.log(err);\r\n    });\r\n```\r\n\r\n\r\n<a name=\"putDir\" />\r\n### SSH2Utils.putDir(server, localPath, remoteFile, callback)\r\n\r\nPut a local directory contents to a remote path.\r\n\r\n__Arguments__\r\n\r\n* `server` - An object of ssh server credentials.\r\n* `localPath` - A local file path to write.\r\n* `remoteFile` - A remote file path to read.\r\n* `callback(err)` - A callback called on command line completion. \r\n    * `err` is an Error.\r\n    * `server` An ssh server credentials object.\r\n    * `conn` An ssh Client object.\r\n\r\n__Examples__\r\n\r\n```js\r\n    var SSH2Utils = require('ssh2-utils');\r\n    var ssh = new SSH2Utils();\r\n    \r\n    var server = {host: \"localhost\", username:\"user\", password:\"pwd\" };\r\n        \r\n    ssh.putDir(server,'/tmp/from_some_local','/tmp/to_some_remote', function(err){\r\n        if(err) console.log(err);\r\n    });\r\n```\r\n\r\n\r\n<a name=\"mkdir\" />\r\n### SSH2Utils.mkdir(server, remotePath, callback)\r\n\r\nCreate a directory at remote path.\r\n\r\n__Arguments__\r\n\r\n* `server` - An object of ssh server credentials.\r\n* `remotePath` - A remote path to create.\r\n* `callback(err)` - A callback called on command line completion. \r\n    * `err` is an Error.\r\n    * `server` An ssh server credentials object.\r\n    * `conn` An ssh Client object.\r\n\r\n__Examples__\r\n\r\n```js\r\n    var SSH2Utils = require('ssh2-utils');\r\n    var ssh = new SSH2Utils();\r\n    \r\n    var server = {host: \"localhost\", username:\"user\", password:\"pwd\" };\r\n        \r\n    ssh.mkdir(server,'/tmp/to_some_remote', function(err){\r\n        if(err) console.log(err);\r\n    });\r\n```\r\n\r\n\r\n<a name=\"rmdir\" />\r\n### SSH2Utils.rmdir(server, remotePath, callback)\r\n\r\nDeletes a directory at remote path.\r\n\r\nEffectively performs ``rm -fr remotePath``.\r\n\r\n__Arguments__\r\n\r\n* `server` - An object of ssh server credentials.\r\n* `remotePath` - A remote path to delete.\r\n* `callback(err)` - A callback called on command line completion. \r\n    * `err` is an Error.\r\n    * `server` An ssh server credentials object.\r\n    * `conn` An ssh Client object.\r\n\r\n__Examples__\r\n\r\n```js\r\n    var SSH2Utils = require('ssh2-utils');\r\n    var ssh = new SSH2Utils();\r\n    \r\n    var server = {host: \"localhost\", username:\"user\", password:\"pwd\" };\r\n        \r\n    ssh.rmdir(server,'/tmp/to_some_remote', function(err){\r\n        if(err) console.log(err);\r\n    });\r\n```\r\n\r\n\r\n<a name=\"fileExists\" />\r\n### SSH2Utils.fileExists(server, remotePath, callback)\r\n\r\nTests a path on remote.\r\n\r\n__Arguments__\r\n\r\n* `server` - An object of ssh server credentials.\r\n* `remotePath` - A remote path to tests.\r\n* `callback(err)` - A callback called on command line completion. \r\n    * `err` is an Error if file does not exists.\r\n    * `server` An ssh server credentials object.\r\n    * `conn` An ssh Client object.\r\n\r\n__Examples__\r\n\r\n```js\r\n    var SSH2Utils = require('ssh2-utils');\r\n    var ssh = new SSH2Utils();\r\n    \r\n    var server = {host: \"localhost\", username:\"user\", password:\"pwd\" };\r\n        \r\n    ssh.fileExists(server,'/tmp/to_some_remote', function(err){\r\n        if(err) console.log(err);\r\n    });\r\n```\r\n\r\n\r\n---------------------------------------\r\n\r\n# Suggestions\r\n\r\nOn linux you may want to edit `/etc/ssh/ssh_config` and append \r\n```\r\nHost 127.0.0.1\r\n   CheckHostIP no\r\n   StrictHostKeyChecking no\r\n   UserKnownHostsFile=/dev/null\r\n```\r\n\r\nThis will help to have multiple vagrant box installed on the same machine.\r\n\r\n------\r\n\r\nOn fedora you may want to create `/etc/polkit-1/rules.d/10.virt.rules` and add\r\n```\r\npolkit.addRule(function(action, subject) {\r\n  polkit.log(\"action=\" + action);\r\n  polkit.log(\"subject=\" + subject);\r\n  var now = new Date();\r\n  polkit.log(\"now=\" + now)\r\n  if ((action.id == \"org.libvirt.unix.manage\"\r\n        || action.id == \"org.libvirt.unix.monitor\")\r\n        \r\n        && subject.isInGroup(\"~~your username group~~\") // <--- change HERE\r\n        \r\n      ) {\r\n    return polkit.Result.YES;\r\n  }\r\n  return null;\r\n});\r\n```\r\n\r\nThis will help to prevent the system from asking the password.\r\n\r\n---------------------------------------\r\n\r\n# Status\r\n\r\nIn development. It needs some tests. some more methods implementation.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}